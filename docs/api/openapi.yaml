openapi: 3.0.3
info:
  title: DS-test-task
  version: 1.0.0
servers:
  - url: https://localhost:8000/api/v1
    description: 'Test server'
tags:
  - name: Contact
    description: Operations related to Contact
  - name: Location
    description: Operations related to Location
components:
  schemas:
    Error:
      required:
        - type
      properties:
        type:
          type: string
          description: A URI reference [RFC3986] that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: number
          description: The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced.
        invalid-params:
          type: array
          example: {'password': ['Password must be contains [...] symbols', 'Password must be longer than [...] symbols']}
          description: Associative array, where key - parameter in which some error, value - strings array with error messages
    ContactInfo:
      required:
        - phone
        - email
        - message
        - id
      properties:
        id:
          type: string
          format: uuid
          description: Contact resource identificator
        phone:
          type: string
          example: +7800553535
          description: Phone number
        email:
          type: string
          format: email
          description: Email address
        message:
          type: string
          example: Hello
          description: Message content
          nullable: true
    LocationInfo:
      required:
        - lat
        - lon
        - town
      properties:
        lat:
          type: number
          description: Lantitude
          example: 54.970901
        lon:
          type: number
          description: Longitude
          example: 73.393753
        town:
          type: string
          example: Omsk
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    ValidationFailedResponse:
      description: Validation failed. The "invalid-params" property contains error information.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequestResponse:
      description: This error is possible if the request format does not match the declared
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    CreateContactSuccessResponse:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactInfo'
    GetLocationByIpSuccessResponse:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LocationInfo'
paths:
  /contact:
    post:
      tags:
        - Contact
      summary: Create contact
      operationId: createContact
      description: 'Create contact'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        201:
          $ref: '#/components/responses/CreateContactSuccessResponse'
        400:
          $ref: '#/components/responses/BadRequestResponse'
        422:
          $ref: '#/components/responses/ValidationFailedResponse'
  /self-location/:
    get:
      tags:
        - Location
      summary: Returns location info by user's IP
      operationId: locationByIp
      responses:
        200:
          $ref: '#/components/responses/GetLocationByIpSuccessResponse'
        500:
          description: Operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
